# Copyright 2019 Adam Schafer <info@pseudo.design>
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

#!/bin/bash
nvm_location="/nvm"
device_node="/dev/mmcblk0"
partition_number="4"
partition_node="${device_node}p${partition_number}"
previous_partition_number=$(($partition_number-1))
previous_partition_node="${device_node}p${previous_partition_number}"

create_partition () {

# Start by getting the last sector of the previous partition
last_sector=$(fdisk -l $device_node | awk -v str="$previous_partition_node" '$0~str{print $3}')

# Feed input into fdisk to create the partition
sed -e 's/\s*\([\+0-9a-zA-Z]*\).*/\1/' << EOF | fdisk ${device_node}
  n # new partition
  p # primary partition
  ${partition_number} # partition number 
  $(($last_sector+1))  # Start just after the end of the previous partition
    # default - extend to the end of the disk
  w # write the partition table and exit
EOF
sleep 2
sync
}

#Make sure the mountpoint exists
mkdir -p "$nvm_location"

# Exit if the partition is already mounted
if df -h | grep -q "$nvm_location"; then
    echo "NVM partition is already mounted"
    exit 0
else
    echo "NVM partition is not mounted"
fi

# Attempt to mount the NVM partition
if mount "${partition_node}" "${nvm_location}"; then
    echo "Successfully mounted existing NVM"
    exit 0
else
    echo "Unable to mount $nvm_location partition."
fi

# We couldn't mount the partition location.  See if the partition_node exists
if [ ! -e "$partition_node" ]; then
    echo "Device node $partition_node does not exist"
    # Add partition to table
    create_partition
else
    echo "Device node $partition_node already exists."
fi

# Attempt to mount the NVM partition
if mount "${partition_node}" "${nvm_location}"; then
    echo "Successfully mounted existing NVM"
    exit 0
else
    echo "Unable to mount $nvm_location partition."
fi

# We couldn't mount the partiton location.  
# We already created the partition, so zero out the node and create the filesystem
echo "Initializing the filesystem.  This may take a few minutes."
mkfs.ext4 "$partition_node"

# Try to mount again; return the exit code
mount "${partition_node}" "${nvm_location}"
